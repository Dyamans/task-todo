/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;


import io.swagger.model.ToDoItem;
import io.swagger.model.ToDoItemAddRequest;
import io.swagger.model.ToDoItemNotFoundError;
import io.swagger.model.ToDoItemUpdateRequest;
import io.swagger.model.ToDoItemValidationError;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.util.UriComponentsBuilder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-01-11T03:29:22.478Z")

@Api(value = "todo", description = "the todo API")
public interface TodoApi {
	
	@ApiOperation(value = "Create a to do item", nickname = "todoPost", notes = "", response = ToDoItem.class, tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ToDoItem.class),
        @ApiResponse(code = 400, message = "Validation error", response = ToDoItemValidationError.class) })
    @RequestMapping(value = "/todo",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<?> todoPost(@Valid @RequestBody ToDoItemAddRequest body);

    @ApiOperation(value = "Retrieve a specific item by id", nickname = "todoIdGet", notes = "", response = ToDoItem.class, tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ToDoItem.class),
        @ApiResponse(code = 400, message = "Validation error", response = ToDoItemValidationError.class),
        @ApiResponse(code = 404, message = "Not Found Error", response = ToDoItemNotFoundError.class) })
    @RequestMapping(value = "/todo/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> todoIdGet(@PathVariable("id") Integer id, HttpServletRequest request, HttpServletResponse response, UriComponentsBuilder builder);


    @ApiOperation(value = "Modify an item", nickname = "todoIdPatch", notes = "", response = ToDoItem.class, tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ToDoItem.class),
        @ApiResponse(code = 400, message = "Validation error", response = ToDoItemValidationError.class),
        @ApiResponse(code = 404, message = "Not Found Error", response = ToDoItemNotFoundError.class) })
    @RequestMapping(value = "/todo/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<?> todoIdPatch(@PathVariable("id") Integer id, @Valid @RequestBody ToDoItemUpdateRequest body, HttpServletRequest request, HttpServletResponse response);    

}
